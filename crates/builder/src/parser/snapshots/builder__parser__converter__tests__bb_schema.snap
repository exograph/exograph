---
source: crates/builder/src/parser/converter.rs
assertion_line: 666
expression: "convert_root(parsed.root_node(),\n        r#\"\n            @postgres\n            service TestService{\n                // a short comment\n                @table(\"concerts\")\n                type Concert {\n                    @pk id: Int = autoincrement()\n                    title: String // a comment\n                    // another comment\n                    venue: Venue @column(\"venueid\")\n                    /*\n                    not_a_field: Int\n                    */\n                }\n\n                /*\n                a multiline comment\n                */\n                @table(\"venues\")\n                type Venue {\n                    @pk id: Int = autoincrement()\n                    name: String\n                    concerts: Set<Concert /* here too! */> @column(\"venueid\")\n                }\n            }\n        \"#.as_bytes(),\n        file_span, Path::new(\"input.clay\")).unwrap()"
---
types: []
services:
  - name: TestService
    annotations:
      - name: postgres
        params: None
    types:
      - name: Concert
        kind: Type
        fields:
          - name: id
            typ:
              Plain:
                - Int
                - []
                - ~
            annotations:
              - name: pk
                params: None
            default_value:
              kind:
                Function:
                  - autoincrement
                  - []
          - name: title
            typ:
              Plain:
                - String
                - []
                - ~
            annotations: []
            default_value: ~
          - name: venue
            typ:
              Plain:
                - Venue
                - []
                - ~
            annotations:
              - name: column
                params:
                  Single:
                    - StringLiteral:
                        - venueid
            default_value: ~
        annotations:
          - name: table
            params:
              Single:
                - StringLiteral:
                    - concerts
      - name: Venue
        kind: Type
        fields:
          - name: id
            typ:
              Plain:
                - Int
                - []
                - ~
            annotations:
              - name: pk
                params: None
            default_value:
              kind:
                Function:
                  - autoincrement
                  - []
          - name: name
            typ:
              Plain:
                - String
                - []
                - ~
            annotations: []
            default_value: ~
          - name: concerts
            typ:
              Plain:
                - Set
                - - Plain:
                      - Concert
                      - []
                      - ~
                - ~
            annotations:
              - name: column
                params:
                  Single:
                    - StringLiteral:
                        - venueid
            default_value: ~
        annotations:
          - name: table
            params:
              Single:
                - StringLiteral:
                    - venues
    methods: []
    interceptors: []
    base_clayfile: input.clay
imports: []

