[package]
name = "common"
version.workspace = true
edition.workspace = true
publish = false

[features]
default = []
test-context = []
opentelemetry = ["opentelemetry_sdk", "opentelemetry-otlp", "tonic"]

[dependencies]
thiserror.workspace = true
tokio.workspace = true
reqwest.workspace = true
http.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["preserve_order"] }
bytes.workspace = true
futures.workspace = true
async-trait.workspace = true
async-recursion.workspace = true
jsonwebtoken.workspace = true
oidc-jwt-validator = { git = "https://github.com/exograph/oidc_jwt_validator", branch = "exograph" }
cookie = "0.18.1"
elsa = "1.8.1"
async-graphql-value.workspace = true
tokio-postgres.workspace = true

exo-env = { path = "../../libs/exo-env" }
exo-sql = { path = "../../libs/exo-sql" }

tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["registry", "env-filter"] }
tracing-opentelemetry = "0.28"
opentelemetry = { version = "0.27.1", default-features = false, features = [
  "trace",
] }
opentelemetry_sdk = { version = "0.27.1", features = [
  "rt-tokio",
], optional = true }
opentelemetry-otlp = { version = "0.27.0", features = [
  "reqwest-client",
  "reqwest-rustls",
  "http-proto",
  "tls",
], optional = true }
# Tonic isn't used directly but we need these flags to establish a TLS connection
tonic = { version = "0.12.3", features = ["tls", "tls-roots"], optional = true }

hyper-util = { version = "0.1.7" }
tower = { version = "0.5", features = ["util"] }


[dev-dependencies]
tokio = { workspace = true, features = ["rt", "macros"] }
wasm-bindgen-test.workspace = true
multiplatform_test.workspace = true

[lib]
doctest = false
