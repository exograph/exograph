[package]
name = "exo-deno"
version.workspace = true
edition.workspace = true
publish = false

[lib]
doctest = false

[features]
default = []
typescript-loader = ["dep:deno_ast"]

[build-dependencies]
deno_runtime = { version = "0.229.0", features = [
  "include_js_files_for_snapshotting",
  "only_snapshotted_js_sources",
  "snapshot",
] }


[dependencies]
thiserror.workspace = true
async-trait.workspace = true
deno_runtime = "0.229.0"
deno_core.workspace = true
deno_error.workspace = true
deno_fs = "0.131.0"
deno_resolver = "0.52.0"
node_resolver = "0.59.0"
sys_traits = "0.1.17"
deno_ast = { version = "0.51.0", features = ["transpiling"], optional = true }
tokio.workspace = true
reqwest = { workspace = true, features = ["blocking"] }
futures.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
tracing.workspace = true
include_dir.workspace = true

windows-sys = { version = "0.59.0", features = [
  "Win32_Foundation",
  "Win32_Media",
  "Win32_Storage_FileSystem",
  "Win32_System_IO",
  "Win32_System_SystemInformation",
  "Win32_System_WindowsProgramming",
  "Wdk",
  "Wdk_System",
  "Wdk_System_SystemInformation",
  "Win32_Security",
  "Win32_System_Pipes",
  "Wdk_Storage_FileSystem",
  "Win32_System_Registry",
  "Win32_System_Kernel",
  "Win32_System_Threading",
  "Win32_UI",
  "Win32_UI_Shell",
] }

exo-env = { path = "../exo-env" }

[dev-dependencies]
ctor.workspace = true
test-log.workspace = true
