[workspace.package]
version = "0.25.0"
edition = "2024"

# See https://github.com/mozilla/application-services/blob/main/Cargo.toml for the reasons why we use this structure
[workspace]
members = [
  "crates/builder",
  "crates/cli",
  "crates/lsp",
  "crates/system-router",
  "crates/graphql-router",
  "crates/rest-router",
  "crates/rpc-router",
  "crates/mcp-router",
  "crates/mcp-bridge",
  "crates/playground-router",
  "crates/server-actix",
  "crates/server-aws-lambda",
  "crates/server-cf-worker",
  "crates/server-common",
  "crates/testing",
  "crates/core-subsystem/*",
  "crates/postgres-subsystem/*",
  # Was "crates/deno-subsystem/*", but due to https://github.com/denoland/rusty_v8/issues/1798, exclude dynamic libs
  # We don't use dynamic libs currently, anyway
  "crates/deno-subsystem/deno-builder",
  "crates/deno-subsystem/deno-graphql-builder",
  "crates/deno-subsystem/deno-graphql-model",
  "crates/deno-subsystem/deno-graphql-resolver",
  "crates/deno-subsystem/deno-resolver",
  "crates/wasm-subsystem/*",
  "crates/subsystem-util/*",
  "crates/introspection-subsystem/*",
  "crates/introspection-util",
  "libs/exo-deno",
  "libs/exo-deno-snapshot",
  "libs/exo-sql",
  "libs/exo-wasm",
  "libs/exo-env",
]

# The default workspace member to run `cargo` commands on (we exclude server-aws-lambda here, since we don't need to build it during normal development)
# Pass --all to `cargo` to include it
default-members = [
  "crates/builder",
  "crates/cli",
  "crates/lsp",
  "crates/mcp-bridge",
  "crates/system-router",
  "crates/graphql-router",
  "crates/rest-router",
  "crates/rpc-router",
  "crates/playground-router",
  "crates/server-actix",
  "crates/testing",
  "crates/core-subsystem/*",
  "crates/postgres-subsystem/*",
  "crates/deno-subsystem/deno-builder",
  "crates/deno-subsystem/deno-graphql-builder",
  "crates/deno-subsystem/deno-graphql-model",
  "crates/deno-subsystem/deno-graphql-resolver",
  "crates/deno-subsystem/deno-resolver",
  "crates/wasm-subsystem/*",
  "crates/subsystem-util/*",
  "crates/introspection-subsystem/*",
  "crates/server-common",
  "libs/exo-deno",
  "libs/exo-deno-snapshot",
  "libs/exo-sql",
  "libs/exo-wasm",
  "libs/exo-env",
]

resolver = "2"

[workspace.dependencies]
colored = "3.0.0"
anyhow = "1.0"
async-graphql-parser = "7.0.6"
async-graphql-value = "7.0.16"
async-recursion = "1.1.1"
async-stream = "0.3.6"
async-trait = "0.1.88"
bincode = "1.3.3"
bytes = "1"
chrono = { version = "0.4.40", default-features = false, features = ["clock"] }
codemap = "0.1.3"
codemap-diagnostic = "0.1.1"
ctor = "0.5.0"
http = "1"
clap = "4.5.21"

deno_core = "0.362.0"
deno_error = "0.7.0"

futures = "0.3.29"
heck = "0.5.0"
include_dir = "0.7.4"
indexmap = "2"
insta = { version = "1.42.2", features = ["redactions", "yaml"] }
jsonwebtoken = "9.3.1"
lazy_static = "1.5.0"
maybe-owned = "0.3.4"
rand = "0.9.2"
regex = "1"
reqwest = { version = "0.12.9", default-features = false, features = [
  "rustls-tls-native-roots",
] }
rustls = { version = "0.23.28", default-features = false, features = ["ring"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1"
serde_yaml = "0.9.34"
tempfile = "3.22.0"
test-log = "0.2.17"
thiserror = "2.0.16"
tracing = "0.1.41"
tokio = "1"
tokio-postgres = { version = "0.7.12", default-features = false }
deadpool-postgres = { version = "0.14.1", default-features = false }
tree-sitter = { git = "https://github.com/exograph/tree-sitter-c2rust.git", branch = "generate-loading-feature-flag" }
tree-sitter-c2rust = "0.25.1"
tree-sitter-generate = { git = "https://github.com/exograph/tree-sitter-c2rust.git", branch = "generate-loading-feature-flag" }
typed-generational-arena = { version = "0.2.6", features = ["serde"] }
uuid = "1.18.1"
url = "2.3.1"
wasmtime = "36.0.2"
wasi-common = "36.0.2"
wildmatch = "2.4.0"
which = "8.0.0"
wasm-bindgen-test = "0.3.51"
wasm-bindgen-test-macro = "0.3.51"
multiplatform_test = "0.5.0"
pluralizer = "0.5.0"
tracing-subscriber = "0.3.20"
toml = { version = "0.9.5", features = ["parse"] }
zip = "5.1.1"

# reduce binary size, does not affect stack traces
[profile.dev]
debug = 1

[profile.release]
lto = true
codegen-units = 1
strip = true
# Use minimal debug info (line tables only) for backtraces, matching Deno's approach.
debug = "line-tables-only"

[profile.release.package.server-cf-worker]
opt-level = "s" # optimize for size in release builds

[workspace.metadata.cargo-shear]
ignored = ["wasm-bindgen-test", "wasm-bindgen-test-macro"]
