# See https://github.com/mozilla/application-services/blob/main/Cargo.toml for the reasons why we use this structure
[workspace]
members = [
    "crates/builder",
    "crates/cli",
    "crates/resolver",
    "crates/server-actix",
    "crates/server-aws-lambda",
    "crates/server-common",
    "crates/testing",
    "crates/core-subsystem/*",
    "crates/postgres-subsystem/*",
    "crates/deno-subsystem/*",
    "crates/wasm-subsystem/*",
    "crates/subsystem-util/*",
    "crates/introspection-subsystem/*",
    "libs/exo-deno",
    "libs/exo-sql",
    "libs/exo-wasm",
]

# The default workspace member to run `cargo` commands on (we exclude server-aws-lambda here, since we don't need to build it during normal development)
# Pass --all to `cargo` to include it
default-members = [
    "crates/builder",
    "crates/cli",
    "crates/resolver",
    "crates/server-actix",
    "crates/testing",
    "crates/core-subsystem/*",
    "crates/postgres-subsystem/*",
    "crates/deno-subsystem/*",
    "crates/wasm-subsystem/*",
    "crates/subsystem-util/*",
    "crates/introspection-subsystem/*",
    "crates/server-common",
    "libs/exo-deno",
    "libs/exo-sql",
    "libs/exo-wasm",
]

resolver = "2"

[workspace.dependencies]
colored = "2.0"
anyhow = "1.0"
async-graphql-parser = "5.0.6"
async-graphql-value = "5.0.6"
async-recursion = "1.0.0"
async-trait = "0.1.53"
bincode = "1.3.3"
bytes = "1"
chrono = { version = "0.4.22", default-features = false, features = ["clock"] }
codemap = "0.1.3"
codemap-diagnostic = "0.1.1"
deno_core = { git = "https://github.com/exograph/deno.git", branch = "patched" }
futures = "0.3"
heck = "0.4.0"
include_dir = "0.7.2"
indexmap = "1.9.3"
insta = "1.29.0"
jsonwebtoken = "8.1.1"
lazy_static = "1.4.0"
maybe-owned = "0.3.4"
rand = "0.8"
regex = "1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1"
tempfile = "3.0.0"
thiserror = "1.0.31"
tracing = "0.1"
tokio = "1"
tokio-postgres = "0.7.6"
tree-sitter = "0.20.9"
tree-sitter-cli = "0.20.8"
typed-generational-arena = { version = "0.2.5", features = ["serde"] }
wasmtime = "6.0.1"
wasmtime-wasi = "6.0.1"
wildmatch = "2.1.0"

# reduce binary size, does not affect stack traces
[profile.dev]
debug = 1

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.0.7"
# The preferred Rust toolchain to use in CI (rustup toolchain syntax)
rust-toolchain-version = "1.69.0"
# CI backends to support (see 'cargo dist generate-ci')
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "powershell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
    "x86_64-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-pc-windows-msvc",
    # "aarch64-apple-darwin"
]
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# A namespace to use when publishing this package to the npm registry
npm-scope = "@exograph"

[profile.release]
lto = "thin"
codegen-units = 1
strip = true

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
