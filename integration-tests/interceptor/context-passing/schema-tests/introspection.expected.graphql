type Audit {
  id: Int!
  operation: String!
  result: String!
  authContext: String!
  adminHeaderContext: String!
  adminEnvContext: String!
}

type AuditAgg {
  id: IntAgg
  operation: StringAgg
  result: StringAgg
  authContext: StringAgg
  adminHeaderContext: StringAgg
  adminEnvContext: StringAgg
}

input AuditCreationInput {
  operation: String!
  result: String!
  authContext: String!
  adminHeaderContext: String!
  adminEnvContext: String!
}

input AuditFilter {
  id: IntFilter
  operation: StringFilter
  result: StringFilter
  authContext: StringFilter
  adminHeaderContext: StringFilter
  adminEnvContext: StringFilter
  and: [AuditFilter!]
  or: [AuditFilter!]
  not: AuditFilter
}

input AuditOrdering {
  id: Ordering
  operation: Ordering
  result: Ordering
  authContext: Ordering
  adminHeaderContext: Ordering
  adminEnvContext: Ordering
}

input AuditUpdateInput {
  id: Int
  operation: String
  result: String
  authContext: String
  adminHeaderContext: String
  adminEnvContext: String
}

type IntAgg {
  min: Int
  max: Int
  sum: Int
  avg: Float
  count: Int
}

input IntFilter {
  eq: Int
  neq: Int
  lt: Int
  lte: Int
  gt: Int
  gte: Int
}

enum Ordering {
  ASC
  DESC
}

type StringAgg {
  min: String
  max: String
  count: Int
}

input StringFilter {
  eq: String
  neq: String
  lt: String
  lte: String
  gt: String
  gte: String
  like: String
  ilike: String
  startsWith: String
  endsWith: String
}

type Todo {
  id: Int!
  title: String!
}

type TodoAgg {
  id: IntAgg
  title: StringAgg
}

input TodoCreationInput {
  title: String!
}

input TodoFilter {
  id: IntFilter
  title: StringFilter
  and: [TodoFilter!]
  or: [TodoFilter!]
  not: TodoFilter
}

input TodoOrdering {
  id: Ordering
  title: Ordering
}

input TodoUpdateInput {
  id: Int
  title: String
}

type Query {
  audit(id: Int!): Audit
  audits(where: AuditFilter, orderBy: [AuditOrdering!], limit: Int, offset: Int): [Audit!]!
  auditsAgg(where: AuditFilter): AuditAgg!
  todo(id: Int!): Todo
  todos(where: TodoFilter, orderBy: [TodoOrdering!], limit: Int, offset: Int): [Todo!]!
  todosAgg(where: TodoFilter): TodoAgg!
}

type Mutation {
  createAudit(data: AuditCreationInput!): Audit!
  createAudits(data: [AuditCreationInput!]!): [Audit!]!
  createTodo(data: TodoCreationInput!): Todo!
  createTodos(data: [TodoCreationInput!]!): [Todo!]!
  deleteAudit(id: Int!): Audit
  deleteAudits(where: AuditFilter): [Audit!]!
  deleteTodo(id: Int!): Todo
  deleteTodos(where: TodoFilter): [Todo!]!
  updateAudit(id: Int!, data: AuditUpdateInput!): Audit
  updateAudits(where: AuditFilter, data: AuditUpdateInput!): [Audit!]!
  updateTodo(id: Int!, data: TodoUpdateInput!): Todo
  updateTodos(where: TodoFilter, data: TodoUpdateInput!): [Todo!]!
}