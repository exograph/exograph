operation: |
  query {
    venue(id: 1) {
      id
    }
    logs(orderBy: {id: ASC}) {
      message @bind(name: "messages")
    }
  }
response: |
  {
    "data": {
      "venue": {
        "id": 1
      },
      "logs": () => {
        const expectedMessages = [
          "enterVenueMutation: createVenue",
          "exitVenueMutation: createVenue",
          "enterVenueMutation: createVenue",
          "exitVenueMutation: createVenue",
          "enterConcertMutation: createConcert",
          "exitConcertMutation createConcert",
          "enterConcertMutation: createConcert",
          "exitConcertMutation createConcert",
          "enterQuery: venue",
          "start timingQuery: venue",
          "start rateLimitingQuery: venue",
          "end rateLimitingQuery: venue",
          "end timingQuery: venue",
          "exitQuery: venue",
          "enterQuery: logs",
          "start timingQuery: logs",
          "start rateLimitingQuery: logs"
        ];

        const actualMessages = $.messages;

        // compare arrays
        if (JSON.stringify(expectedMessages) != JSON.stringify(actualMessages)) {
          console.log("expected interceptor order", expectedMessages);
          console.log("actual interceptor order", actualMessages);
          return false;
        } else {
          return true;
        }
      }
    }
  }