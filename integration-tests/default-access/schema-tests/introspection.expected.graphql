type DivisionResultFullAccess {
  quotient: Int!
  remainder: Int!
}

type DivisionResultNoAccess {
  quotient: Int!
  remainder: Int!
}

type Query {
  divide(a: Int!, b: Int!): DivisionResultFullAccess!
  divideFullAccess(a: Int!, b: Int!): DivisionResultNoAccess!
}

type Mutation {
  divideFullAccessMutation(a: Int!, b: Int!): DivisionResultNoAccess!
  divideMutation(a: Int!, b: Int!): DivisionResultFullAccess!
}