stages:
  - operation: |
      mutation {
        createConcert(data: {title: "Foo"}) {
          id
        }
      }
    response: |
      {
        "errors": [
          {
            "message": "Field 'createConcert' is not valid for type 'Mutation'",
            "locations": [
               {
                 "line": 2,
                 "column": 3
               }
             ]
          }
        ]
      }
  - operation: |
      mutation {
        updateConcert(id: 1, data: {title: "Foo"}) {
          id
        }
      }
    response: |
      {
        "errors": [
          {
            "message": "Field 'updateConcert' is not valid for type 'Mutation'",
            "locations": [
               {
                 "line": 2,
                 "column": 3
               }
             ]
          }
        ]
      }

  - operation: |
      mutation {
        deleteConcert(id: 1) {
          id
        }
      }
    response: |
      {
        "errors": [
          {
            "message": "Field 'deleteConcert' is not valid for type 'Mutation'",
            "locations": [
               {
                 "line": 2,
                 "column": 3
               }
             ]
          }
        ]
      }

  - operation: |
      mutation {
        divideFullAccessMutation(a: 6, b: 2) {
          quotient
          remainder
        }
      }
    response: |
      {
        "errors": [
          {
            "message": "Not authorized"
          }
        ]
      }

  - operation: |
      mutation {
        divideNoAccessMutation(a: 6, b: 2) {
          quotient
          remainder
        }
      }
    response: |
      {
        "errors": [
          {
            "message": "Not authorized"
          }
        ]
      }


  - operation: |
      mutation {
        divideMutation(a: 6, b: 2) {
          quotient
          remainder
        }
      }
    response: |
      {
        "data": {
          "divideMutation": {
            "quotient": 3,
            "remainder": 0
          }
        }
      }
