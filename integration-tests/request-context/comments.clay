context AuthContext {
    role: String @jwt("role")
    connectingIp: String @header("X-Connecting-IP")
    devMode: String @env("__DEV_MODE")
}

context TrackingContext {
    uid: String @header("X-User-ID")
}

@access(
    query=true,
    mutation=AuthContext.role == "ADMIN" ||
             AuthContext.connectingIp == "127.0.0.1" ||
             AuthContext.devMode == "1"
)
model JournalEntry {
    id: Int = autoincrement() @pk
    text: String
} 

@external("context_getter.ts")
service ContextGetter {
    query getRole(@inject context: AuthContext): String
    query getConnectingIp(@inject context: AuthContext): String
    query getDevModeEnabled(@inject context: AuthContext): Boolean

    // query with two different injected contexts
    query getRoleAndUid(@inject auth: AuthContext, @inject tracking: TrackingContext): String
}