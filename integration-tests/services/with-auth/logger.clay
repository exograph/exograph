context AuthContext {
    @jwt("sub") id: Int 
    @jwt("role") role: String 
}

@deno("logger.js")
service PrivilegedLogger {
    type LogEntry {
        level: String
        message: String
    }

    query getRole(@inject auth_context: AuthContext): String

    mutation logNormal(entry: LogEntry): Boolean

    @access(AuthContext.role == "ROLE_PRIVILEGED")
    mutation logPrivileged(entry: LogEntry): Boolean
}