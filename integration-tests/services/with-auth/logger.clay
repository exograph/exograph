context AuthContext {
    id: Int @jwt("sub")
    role: String @jwt("role")
}

@deno("logger.js")
service PrivilegedLogger {
    type LogEntry {
        level: String
        message: String
    }

    query getRole(@inject auth_context: AuthContext): String

    mutation logNormal(entry: LogEntry): Boolean

    @access(AuthContext.role == "ROLE_PRIVILEGED")
    mutation logPrivileged(entry: LogEntry): Boolean
}