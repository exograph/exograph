operation: |
    query Foo($factor_a: Int!, $factor_b: Int!, $dividend: Int!, $divisor: Int!) {
      addDirect: add(x: 1, y: 2)

      addVariables: add(x: $factor_a, y: $factor_b)

      currentUnixEpoch
    
      divide(x: $divisor, y: $dividend) {
        quotient
        remainder
      }
    
      shimQuery
    }
variable: |
    {
        "factor_a": 5,
        "factor_b": 6,

        "dividend": 13,
        "divisor": 2
    }
response: |
    {
      "data": {
        "addDirect": 3,
        "addVariables": $.factor_a + $.factor_b,
        "currentUnixEpoch": ((t) => {
          const currentTime = Math.floor(Date.now() / 1000);
          return (currentTime - t) < 5;
        }),
        "divide": ((actual) => {
          (actual.quotient  == Math.floor($.dividend / $.divisor)) &&
          (actual.remainder == $.dividend % $.divisor)
        }),
        "shimQuery": "The `foos` with `baz` = 4 have IDs of " + $.foo1_id + ", " + $.foo2_id + ", "
      }
    } 