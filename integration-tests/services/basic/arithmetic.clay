@table("foo")
model Foo {
    id: Int = autoincrement() @pk
    bar: Int
    baz: Int
    qux: Int
}

@external("arithmetic.js")
service MathService {
    type DivisionResult {
        quotient: Int
        remainder: Int
    }

    input type LogMessage {
        level: String
        message: String
    }

    export query add(x: Int, y: Int): Int
    export query divide(x: Int, y: Int): DivisionResult
    export query asyncDivide(x: Int, y: Int): DivisionResult
    export query currentUnixEpoch(): Int

    export query shimQuery(@inject claytip: Claytip): Int 
    export mutation testMutation(@inject claytip: Claytip): Float 
    export mutation illegalFunction(): String

}

@external("todo.ts")
service TodoService {
    type Todo {
        id: Int
        userId: Int
        title: String
        completed: Boolean
    }

    export query todo(id: Int): Todo
}
