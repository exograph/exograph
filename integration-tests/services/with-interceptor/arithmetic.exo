@deno("arithmetic.js")
module MathModule {
    @access(true)
    type DivisionResult {
        quotient: Int
        remainder: Int
    }

    @access(true)
    export query divide(x: Int, y: Int): DivisionResult

    @access(true)
    export query asyncDivide(x: Int, y: Int): DivisionResult
}

@deno("time.ts")
module TimeModule {
    @around("query *")
    interceptor time(operation: Operation)
}

// Apply the interceptor twice to ensure that exception still propagates.
@deno("time.ts")
module Time2Module {
    @around("query *")
    interceptor time(operation: Operation)
}