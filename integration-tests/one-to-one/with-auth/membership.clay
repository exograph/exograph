context AuthContext {
  @jwt("sub") id: Int 
  @jwt("role") role: String 
}

@postgres
service MembershipService {
  // A user may have an optional membership, but a membership must have an associated user
  @access(query = AuthContext.role == "ADMIN" || AuthContext.id == self.id, mutation = AuthContext.role == "ADMIN" || AuthContext.id == self.id)
  type User {
    @pk id: Int = autoincrement()
    name: String
    membership: Membership?
  }
  
  @access(query = AuthContext.role == "ADMIN" || AuthContext.id == self.user.id, mutation = AuthContext.role == "ADMIN" || AuthContext.id == self.user.id)
  type Membership {
    @pk id: Int = autoincrement()
    kind: String
    user: User
  }
}