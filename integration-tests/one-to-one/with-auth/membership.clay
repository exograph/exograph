context AuthContext {
  id: Int @jwt("sub")
  role: String @jwt("role")
}

@postgres
service MembershipService {
  // A user may have an optional membership, but a membership must have an associated user
  @access(query = AuthContext.role == "ADMIN" || AuthContext.id == self.id, mutation = AuthContext.role == "ADMIN" || AuthContext.id == self.id)
  type User {
    id: Int = autoincrement() @pk
    name: String
    membership: Membership?
  }
  
  @access(query = AuthContext.role == "ADMIN" || AuthContext.id == self.user.id, mutation = AuthContext.role == "ADMIN" || AuthContext.id == self.user.id)
  type Membership {
    id: Int = autoincrement() @pk
    kind: String
    user: User
  }
}