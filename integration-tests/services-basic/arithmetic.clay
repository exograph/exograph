context AuthContext {
    id: Int @jwt("sub")
    role: String @jwt("role")
}

@table("foo")
model Foo {
    id: Int @pk
    bar: Int
}

type Env {

}

@external("arithmetic.model")
service MathService {
    type AddResult {
        sum: Int
    }

    type DivisionResult {
        quotient: Int
        remainder: Int
    }

    export query add(x: Int, y: Int): AddResult

    @access(query=AuthContext.role == "ROLE_ALLOW_DIVIDE")
    export query divide(x: Int, y: Int): DivisionResult
    export mutation abc(result: AddResult): Int // FIXME: mandate return type

    query log(@inject env: Env, x: Int, y: Int): Int
}
