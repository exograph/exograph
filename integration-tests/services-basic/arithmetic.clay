context AuthContext {
    id: Int @jwt("sub")
    role: String @jwt("role")
}

@table("foo")
model Foo {
    id: Int @pk
    bar: Int
    baz: Int
    qux: Int
}

@external("arithmetic.js")
service MathService {
    type DivisionResult {
        quotient: Int
        remainder: Int
    }

    input type LogMessage {
        level: String
        message: String
    }

    export query add(x: Int, y: Int): Int
    export query divide(x: Int, y: Int): DivisionResult

    export query sideEffectQuery(): Int 
    export mutation sideEffectMutation(): Float 

    // TODO
    // export query log(@inject env: Env, message: LogMessage): Boolean
}
