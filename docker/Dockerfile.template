ARG BUILD_IMAGE
ARG BASE_IMAGE

FROM ${BUILD_IMAGE} as builder

# Compile the binaries (clay and clay-server)

ARG BUILD_DIR
ARG BUILD_FLAG

%%BUILD_SETUP%%

ENV PATH "$PATH:/root/.cargo/bin"
RUN cargo install --version 0.20.6 tree-sitter-cli

WORKDIR /usr/src

## Build and cache the dependencies
### Create empty projects with the right type (lib/bin)
RUN USER=root cargo new --vcs none --bin payas-cli
RUN USER=root cargo new --vcs none --lib payas-deno
RUN USER=root cargo new --vcs none --lib payas-model
RUN USER=root cargo new --vcs none --lib payas-parser
RUN USER=root cargo new --vcs none --bin payas-server-actix
RUN USER=root cargo new --vcs none --bin payas-server-aws-lambda
RUN USER=root cargo new --vcs none --lib payas-server-core
RUN USER=root cargo new --vcs none --lib payas-sql
RUN USER=root cargo new --vcs none --lib payas-test

### Copy over Cargo.toml and Cargo.lock files so that we can build just
### the dependencies and cache this layer when only source files change
COPY ./Cargo.toml ./Cargo.toml
COPY ./Cargo.lock ./Cargo.lock
COPY ./payas-cli/Cargo.toml ./payas-cli/Cargo.toml
COPY ./payas-deno/Cargo.toml ./payas-deno/Cargo.toml
COPY ./payas-model/Cargo.toml ./payas-model/Cargo.toml
COPY ./payas-parser/Cargo.toml ./payas-parser/Cargo.toml
COPY ./payas-server-actix/Cargo.toml ./payas-server-actix/Cargo.toml
COPY ./payas-server-aws-lambda/Cargo.toml ./payas-server-aws-lambda/Cargo.toml
COPY ./payas-server-core/Cargo.toml ./payas-server-core/Cargo.toml
COPY ./payas-sql/Cargo.toml ./payas-sql/Cargo.toml
COPY ./payas-test/Cargo.toml ./payas-test/Cargo.toml

COPY ./graphiql/package.json ./graphiql/package.json
COPY ./graphiql/package-lock.json ./graphiql/package-lock.json

### Compile the depdencies and remove artifacts related to the non-dependency parts (so that when we use real code, they get rebuilt)
RUN cargo build ${BUILD_FLAG} && rm */src/*.rs && rm target/${BUILD_DIR}/deps/payas* && rm -rf target/${BUILD_DIR}/.fingerprint/payas* 
RUN cd graphiql && npm install

## Build the actual image
### Copy over the source files
ADD payas-cli payas-cli/
ADD payas-deno payas-deno/
ADD payas-model payas-model/
ADD payas-parser payas-parser/
ADD payas-server-actix payas-server-actix/
ADD payas-server-aws-lambda payas-server-aws-lambda/
ADD payas-server-core payas-server-core/
ADD payas-sql payas-sql/
ADD payas-test payas-test/

ADD graphiql graphiql/

### Build the binaries (first the graphiql app and then the rest)
RUN cd graphiql && npm run prod-build
RUN cargo build ${BUILD_FLAG}

# Create an image to include the compiled binaries
ARG BASE_IMAGE
FROM $BASE_IMAGE as clay-builder

ARG BUILD_DIR
ARG APP=/usr/src/app

RUN mkdir -p ${APP}

COPY --from=builder /usr/src/target/${BUILD_DIR}/clay-server ${APP}/clay-server
COPY --from=builder /usr/src/target/${BUILD_DIR}/clay ${APP}/clay
COPY --from=builder /usr/src/target/${BUILD_DIR}/bootstrap ${APP}/bootstrap

# Create an image that can be used for development--the `clay serve` style
FROM clay-builder as clay-dev

ARG BUILD_DIR
ARG APP=/usr/src/app

ENV TZ=Etc/UTC
ENV APP_USER=clay

%%RUNTIME_SETUP%%

WORKDIR ${APP}
