name: Exograph CI

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  check-skip:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          cancel_others: "true"

  lint:
    needs: check-skip
    if: ${{ needs.check-skip.outputs.should_skip != 'true' || github.event_name != 'pull_request' }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install deps
      run: sudo apt-get install -y protobuf-compiler
    - uses: Swatinem/rust-cache@v2.3.0
    - name: Run cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Run cargo clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets --all-features -- -D warnings --no-deps

  test:
    needs: check-skip
    if: ${{ needs.check-skip.outputs.should_skip != 'true' || github.event_name != 'pull_request' }}

    strategy:
      fail-fast: false
      matrix:
        # For these target platforms
        include:
        - os: ubuntu-20.04
          deps-script: sudo apt-get install -y protobuf-compiler
          target: x86_64-unknown-linux-gnu
          cross_flag: ""
          vendor_openssl_flag: ""
        - os: macos-11
          deps-script: brew install protobuf
          target: x86_64-apple-darwin
          cross_flag: ""
          vendor_openssl_flag: ""
        - os: macos-11
          deps-script: brew install protobuf
          target: aarch64-apple-darwin
          cross_flag: "--features cross"
          vendor_openssl_flag: "--features vendored-openssl"
        - os: windows-2019
          deps-script: choco install protoc
          target: x86_64-pc-windows-msvc
          cross_flag: ""
          vendor_openssl_flag: "--features vendored-openssl"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: ${{ matrix.deps-script }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Add Postgres to PATH
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "$PGBIN" >> $GITHUB_PATH
          else
            echo "$(pg_config --bindir)" >> $GITHUB_PATH
          fi
        shell: bash
      - name: Add target
        run: rustup target add ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2.3.0
        with:
          key: ${{ matrix.target }}
      - name: Build
        run: cargo build --target ${{ matrix.target }} ${{ matrix.cross_flag }} ${{ matrix.vendor_openssl_flag }}
      - name: Run tests
        if: ${{ matrix.cross_flag == '' }}
        env:
          RUST_BACKTRACE: 1
        run: cargo test --workspace --target ${{ matrix.target }} ${{ matrix.cross_flag }} ${{ matrix.vendor_openssl_flag }}
      - name: Run integration tests
        if: ${{ matrix.cross_flag == '' }}
        env:
          RUST_BACKTRACE: 1
          EXO_RUN_INTROSPECTION_TESTS: true
        run: target/${{ matrix.target }}/debug/exo test integration-tests
        shell: bash
