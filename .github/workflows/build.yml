name: Build Binaries

on:
  push:
    branches: ["main"]
    tags:
      - "*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Build and packages all the things
  build-artifacts:
    strategy:
      fail-fast: false
      matrix:
        # For these target platforms
        include:
          - os: macos-11
            deps-script: brew install protobuf
            target: x86_64-apple-darwin
            cross_flag: ""
            bin_extension: ""
          - os: macos-11
            deps-script: brew install protobuf
            target: aarch64-apple-darwin
            cross_flag: "--features cross"
            bin_extension: ""
          - os: ubuntu-20.04
            deps-script: sudo apt-get install -y protobuf-compiler
            target: x86_64-unknown-linux-gnu
            cross_flag: ""
            bin_extension: ""
          - os: windows-2019
            deps-script: choco install protoc
            target: x86_64-pc-windows-msvc
            cross_flag: ""
            bin_extension: ".exe"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: ${{ matrix.deps-script }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2.3.0
        with:
          key: ${{ matrix.target }}
      - name: Build
        run: |
          cargo build -p cli -p server-actix --target ${{ matrix.target }} --release ${{ matrix.cross_flag }} 
          mkdir -p dist
          cp target/${{matrix.target}}/release/exo${{matrix.bin_extension}} dist/
          cp target/${{matrix.target}}/release/exo-server${{matrix.bin_extension}} dist/
      - name: Create zip of binaries
        run: |
          cp LICENSE dist/
          cd dist/
          7z a exograph-${{matrix.target}}.zip *
          cd ..
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: exograph-${{matrix.target}}.zip
          path: dist/exograph-${{matrix.target}}.zip
      - name: Upload zip to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/exograph-${{matrix.target}}.zip
          asset_name: exograph-${{matrix.target}}.zip
          tag: ${{ github.ref }}

  build-and-push-docker:
    needs: build-artifacts
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/') # Only build and push Docker images for tags

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Download artifacts
        id: download
        uses: actions/download-artifact@v3
        with:
          name: exograph-x86_64-unknown-linux-gnu.zip # Must match the "name" of the "Upload Artifacts" step above

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.ci
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
